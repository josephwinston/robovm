package: org.robovm.apple.dispatch
library: dispatch
default_class: Dispatch
header: /usr/include/dispatch/dispatch.h
path_match: ^.*/usr/include/dispatch/.*$
force_types: [timespec]
typedefs:
    _NSZone: void
    "Protocol *": ObjCProtocol
    dispatch_queue_t: DispatchQueue
classes:
    timespec:
        visibility: ''
    dispatch_io_s:
        name: DispatchIO
        extends: DispatchObject
    dispatch_object_s:
        name: DispatchObject
    dispatch_object_t:
        name: DispatchObject
        exclude: true
    (dispatch_(data|group|queue|queue_attr|semaphore|source|source_type))_s:
        name: "#{g[0].camelize}"
        extends: DispatchObject
functions:
    dispatch_((barrier_)?a?sync.*):
        class: DispatchQueue
        name: "#{g[0].camelize}"
    dispatch_((apply|after).*):
        class: DispatchQueue
        name: "#{g[0].camelize}"
    dispatch_(get.*queue):
        class: DispatchQueue
        name: "#{g[0].camelize}"
    dispatch_data_(.*):
        class: DispatchData
        name: "#{g[0].camelize}"
    dispatch_group_wait:
        class: DispatchGroup
        name: await
    dispatch_group_(.*):
        class: DispatchGroup
        name: "#{g[0].camelize}"
    dispatch_io_(.*):
        class: DispatchIO
        name: "#{g[0].camelize}"
    dispatch_queue_(.*):
        class: DispatchQueue
        name: "#{g[0].camelize}"
    dispatch_semaphore_wait:
        class: DispatchSemaphore
        name: await
    dispatch_semaphore_(.*):
        class: DispatchSemaphore
        name: "#{g[0].camelize}"
    dispatch_source_get_handle:
        class: DispatchSource
        name: getSourceHandle
    dispatch_source_(.*):
        class: DispatchSource
        name: "#{g[0].camelize}"
    dispatch_(retain|release|(get|set)_context|set_finalizer_f|suspend|resume|set_target_queue):
        class: DispatchObject
        name: "#{g[0].camelize}"
        parameters:
            object:
                type: DispatchObject
    dispatch_(.*):
        class: Dispatch
        name: "#{g[0].camelize}"
values:
    _dispatch_source_type_(.*):
        class: DispatchSourceType
        type: DispatchSourceType
        name: "#{g[0].camelize}"
    _dispatch_data_(empty):
        class: DispatchData
        type: DispatchData
        name: "#{g[0].camelize}"
    _dispatch_main_q:
        class: DispatchQueue
        type: DispatchQueue
        name: getMainQueue
        readonly: true
    _dispatch_queue_attr_concurrent:
        class: DispatchQueueAttr
        type: DispatchQueueAttr
        name: Concurrent
        readonly: true
    _dispatch_data_(.*):
        class: DispatchData
        type: DispatchData
        name: "#{g[0].camelize}"
        readonly: true
    dispatch_(.*):
        class: Dispatch
constants:
    DISPATCH_QUEUE_(.*):
        class: DispatchQueue
        name: "#{g[0]}"
    DISPATCH_((PROC|VNODE|MACH|MEMORYPRESSURE|TIMER).*):
        class: DispatchSource
        name: "#{g[0]}"
    DISPATCH_IO_(.*):
        class: DispatchIO
        name: "#{g[0]}"
    DISPATCH_(.*):
        class: Dispatch
        name: "#{g[0]}"
